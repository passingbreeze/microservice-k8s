name: Build Store Stock UP API and Push Image to Amazon ECR

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: store-repos

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push stock-up-api image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_NAME: STORE_STOCKUP
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG ./store/stock-up-api
        docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
    
    - name: Build, tag, and push store-sell-api image to Amazon ECR
      id: build-image
      env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         IMAGE_NAME: STORE_API_SERVER
         IMAGE_TAG: latest
      run: |
         docker build -t $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG ./store/store-sell-api
         docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"

    - name: Build, tag, and push store-db image to Amazon ECR
      id: build-image
      env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         IMAGE_NAME: STORE_DB
         IMAGE_TAG: latest
      run: |
         docker build -t $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG ./store/store-db
         docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
    
    - name: Build, tag, and push store-empty-to-factory image to Amazon ECR
      id: build-image
      env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         IMAGE_NAME: STORE_EMPTY_TO_FACTORY
         IMAGE_TAG: latest
      run: |
         docker build -t $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG ./store/stock-empty-to-factory
         docker push $ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"